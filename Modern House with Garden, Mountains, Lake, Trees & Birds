#include<windows.h>
#include<GL/gl.h>
#include<GL/glut.h>
#include<cmath>  // For sin and cos

void display(void) {
    glClear(GL_COLOR_BUFFER_BIT);

    // ------------------ Sky ------------------
    glColor3f(0.5, 0.8, 1.0); // Light blue sky
    glBegin(GL_POLYGON);
        glVertex3f(-100, 100, 0.0);
        glVertex3f(100, 100, 0.0);
        glVertex3f(100, -20, 0.0);
        glVertex3f(-100, -20, 0.0);
    glEnd();

    // ------------------ Sun ☀️ ------------------
    glColor3f(1.0, 1.0, 0.0); // Bright yellow
    float sunX = 70, sunY = 70, radius = 10;
    glBegin(GL_POLYGON);
        for (int i = 0; i < 360; i += 5) {
            float theta = i * 3.1416 / 180;
            glVertex2f(sunX + radius * cos(theta), sunY + radius * sin(theta));
        }
    glEnd();

    // ------------------ Mountains ------------------
    glColor3f(0.4, 0.4, 0.4); // Dark gray
    glBegin(GL_TRIANGLES);
        glVertex3f(-90, -20, 0.0);
        glVertex3f(-60, 40, 0.0);
        glVertex3f(-30, -20, 0.0);
    glEnd();
    glBegin(GL_TRIANGLES);
        glVertex3f(-40, -20, 0.0);
        glVertex3f(-10, 35, 0.0);
        glVertex3f(20, -20, 0.0);
    glEnd();
    glBegin(GL_TRIANGLES);
        glVertex3f(10, -20, 0.0);
        glVertex3f(50, 45, 0.0);
        glVertex3f(90, -20, 0.0);
    glEnd();

    // ------------------ Garden Ground ------------------
    glColor3f(0.3, 0.8, 0.3); // Green grass
    glBegin(GL_POLYGON);
        glVertex3f(-100, -100, 0.0);
        glVertex3f(100, -100, 0.0);
        glVertex3f(100, -20, 0.0);
        glVertex3f(-100, -20, 0.0);
    glEnd();

    // ------------------ Lake ------------------
    glColor3f(0.2, 0.6, 0.9); // Blue water
    glBegin(GL_POLYGON);
        glVertex3f(-30, -60, 0.0);
        glVertex3f(30, -60, 0.0);
        glVertex3f(25, -45, 0.0);
        glVertex3f(-25, -45, 0.0);
    glEnd();

    // ------------------ Modern House ------------------
    // House Body
    glColor3f(0.85, 0.85, 0.85); // Light gray
    glBegin(GL_POLYGON);
        glVertex3f(-40, -20, 0.0);
        glVertex3f(40, -20, 0.0);
        glVertex3f(40, 40, 0.0);
        glVertex3f(-40, 40, 0.0);
    glEnd();

    // Roof
    glColor3f(0.2, 0.2, 0.2); // Dark gray
    glBegin(GL_POLYGON);
        glVertex3f(-45, 40, 0.0);
        glVertex3f(45, 40, 0.0);
        glVertex3f(40, 55, 0.0);
        glVertex3f(-40, 55, 0.0);
    glEnd();

    // ------------------ Glass Door ------------------
    glColor3f(0.6, 0.9, 1.0); // Light blue glass
    glBegin(GL_POLYGON);
        glVertex3f(-10, -20, 0.0);
        glVertex3f(10, -20, 0.0);
        glVertex3f(10, 20, 0.0);
        glVertex3f(-10, 20, 0.0);
    glEnd();

    // ------------------ Windows ------------------
    glColor3f(0.6, 0.9, 1.0); // Window color
    // Left
    glBegin(GL_POLYGON);
        glVertex3f(-35, 10, 0.0);
        glVertex3f(-20, 10, 0.0);
        glVertex3f(-20, 30, 0.0);
        glVertex3f(-35, 30, 0.0);
    glEnd();
    // Right
    glBegin(GL_POLYGON);
        glVertex3f(20, 10, 0.0);
        glVertex3f(35, 10, 0.0);
        glVertex3f(35, 30, 0.0);
        glVertex3f(20, 30, 0.0);
    glEnd();

    // ------------------ Flowerbed ------------------
    glColor3f(1.0, 0.4, 0.4); // Red flowers
    for (int i = -30; i <= 30; i += 15) {
        glBegin(GL_POLYGON);
            glVertex3f(i - 2, -30, 0.0);
            glVertex3f(i + 2, -30, 0.0);
            glVertex3f(i + 2, -25, 0.0);
            glVertex3f(i - 2, -25, 0.0);
        glEnd();
    }

    // ------------------ Garden Bushes ------------------
    glColor3f(0.1, 0.5, 0.1); // Dark green
    for (int i = -60; i <= 60; i += 30) {
        glBegin(GL_POLYGON);
            for (int j = 0; j < 360; j += 10) {
                float theta = j * 3.1416 / 180;
                glVertex2f(i + 5 * cos(theta), -40 + 5 * sin(theta));
            }
        glEnd();
    }

    // ------------------ Multiple Trees ------------------
    int treePositions[] = {-70, -50, 60};
    for (int t = 0; t < 3; t++) {
        int x = treePositions[t];
        // Trunk
        glColor3f(0.5, 0.3, 0.0);
        glBegin(GL_POLYGON);
            glVertex3f(x, -40, 0.0);
            glVertex3f(x + 5, -40, 0.0);
            glVertex3f(x + 5, 0, 0.0);
            glVertex3f(x, 0, 0.0);
        glEnd();

        // Leaves (4 layers)
        glColor3f(0.1, 0.6, 0.2);
        for (int i = 0; i < 4; i++) {
            glBegin(GL_TRIANGLES);
                glVertex3f(x - 10, i * 2, 0.0);
                glVertex3f(x + 15, i * 2, 0.0);
                glVertex3f(x + 2.5, 20, 0.0);
            glEnd();
        }
    }

    // ------------------ Birds ------------------
    glColor3f(0.0, 0.0, 0.0); // Black birds
    for (float bx = -80; bx <= -40; bx += 20) {
        glBegin(GL_LINES);
            glVertex2f(bx, 80);
            glVertex2f(bx + 5, 83);
            glVertex2f(bx + 5, 83);
            glVertex2f(bx + 10, 80);
        glEnd();
    }

    glFlush();
}

void init(void) {
    glClearColor(1, 1, 1, 1); // White background
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-100, 100, -100, 100, -1.0, 1.0); // 2D view
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 600);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Modern House with Garden, Mountains, Lake, Trees & Birds");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
